name: RMG

on: [push, pull_request]

jobs:
  Linux:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: Linux
      - name: Install Packages
        run: |
          sudo apt-get -y install cmake libhidapi-dev libsamplerate0-dev libspeex-dev libminizip-dev libsdl2-dev libfreetype6-dev libgl1-mesa-dev libglu1-mesa-dev pkg-config zlib1g-dev binutils-dev libspeexdsp-dev qt6-base-dev libqt6svg6-dev libvulkan-dev build-essential nasm git zip ninja-build curl
      - name: Prepare Environment
        run: |
          echo "GIT_REVISION=$(git describe --tags --always)" >> $GITHUB_ENV
      - name: Build RMG (AppImage)
        run: |
          mkdir Build Build/AppImage Bin/ -p
          export src_dir="$(pwd)"
          export build_dir="$(pwd)/Build/AppImage"
          export bin_dir="$(pwd)/Bin/AppImage"
          cmake -S "$src_dir" -B "$build_dir" -DCMAKE_BUILD_TYPE="Release" \
                -DUSE_ANGRYLION=ON \
                -DCMAKE_INSTALL_PREFIX="/usr" \
                -DCMAKE_INSTALL_LIBDIR="lib"  \
                -DPORTABLE_INSTALL="OFF" \
                -DUPDATER=ON -DAPPIMAGE_UPDATER=ON \
                -G "Ninja"
          cmake --build "$build_dir"
          cmake --install "$build_dir" --strip --prefix="$bin_dir/usr"
        shell: bash
      - name: Create AppImage
        run: |
          ./Package/AppImage/Create.sh
        shell: bash
      - name: Upload RMG (AppImage)
        uses: actions/upload-artifact@v4
        with:
          name: RMG-Portable-Linux64-${{ env.GIT_REVISION }}
          path: Bin/*.AppImage
